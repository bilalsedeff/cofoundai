apiVersion: apps/v1
kind: Deployment
metadata:
  name: dream-service
  labels:
    app: dream-service
    version: v1
    tier: backend
    phase: dream
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: dream-service
  template:
    metadata:
      labels:
        app: dream-service
        version: v1
        tier: backend
        phase: dream
    spec:
      serviceAccountName: cofoundai-service-account
      containers:
      - name: dream-service
        image: us-central1-docker.pkg.dev/PROJECT_ID/cofoundai-repo/dream-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: database-config
              key: host
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: database-config
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-config
              key: password
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: database-config
              key: database
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: port
        - name: PUBSUB_TOPIC_DREAM_REQUESTS
          value: "dream-requests-prod"
        - name: PUBSUB_TOPIC_DREAM_PROCESSED
          value: "dream-processed-prod"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "800m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      nodeSelector:
        cloud.google.com/gke-nodepool: cofoundai-node-pool
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dream-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: dream-service
  labels:
    app: dream-service
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: dream-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cofoundai-service-account
  annotations:
    iam.gke.io/gcp-service-account: cofoundai-gke-nodes@PROJECT_ID.iam.gserviceaccount.com
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  host: "REDIS_HOST"
  port: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: database-config
type: Opaque
data:
  host: # base64 encoded database host
  username: # base64 encoded database username  
  password: # base64 encoded database password
  database: # base64 encoded database name
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dream-service-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "cofoundai-ip"
    networking.gke.io/managed-certificates: "cofoundai-ssl-cert"
    kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
  - host: api.cofoundai.com
    http:
      paths:
      - path: /dream/*
        pathType: Prefix
        backend:
          service:
            name: dream-service
            port:
              number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: cofoundai-ssl-cert
spec:
  domains:
    - api.cofoundai.com
